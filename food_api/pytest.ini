[pytest]
# ==========================================================
# TEST DISCOVERY
# ==========================================================
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# ==========================================================
# ASYNCIO CONFIGURATION (CRITICAL FOR EVENT LOOP STABILITY)
# ==========================================================
# asyncio_mode = auto: Automatically detect async tests (REQUIRED for compatibility)
# asyncio_default_fixture_loop_scope = session: Share event loop across ALL tests
#     NOTE: Session-scoped is CRITICAL to prevent "Event loop is closed" errors
#     Motor (MongoDB driver) requires a stable event loop
asyncio_mode = auto
asyncio_default_fixture_loop_scope = session

# ==========================================================
# TEST MARKERS
# ==========================================================
markers =
    unit: Unit tests (fast, isolated tests)
    integration: Integration tests (test API endpoints)
    security: Security-focused tests (authentication, injection, etc.)
    slow: Slow-running tests (performance, load tests)
    smoke: Quick smoke tests for deployment validation
    asyncio: Async tests using pytest-asyncio

# ==========================================================
# PYTEST OPTIONS
# ==========================================================
addopts = 
    --strict-markers
    --verbose
    --tb=short
    -ra
    --maxfail=5
    --disable-warnings
    --durations=10
    --asyncio-mode=auto

# ==========================================================
# OUTPUT OPTIONS
# ==========================================================
console_output_style = progress
log_cli = false
log_cli_level = INFO

# ==========================================================
# TIMEOUT CONFIGURATION
# ==========================================================
# Increase timeout for async tests and database operations
timeout = 300
timeout_method = thread

# ==========================================================
# WARNING FILTERS
# ==========================================================
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::RuntimeWarning
    ignore::pytest.PytestUnraisableExceptionWarning
    ignore::ResourceWarning

# ==========================================================
# PERFORMANCE OPTIMIZATIONS
# ==========================================================
# Reuse database connections across tests
# Clean up resources properly
# Share event loop to reduce overhead
